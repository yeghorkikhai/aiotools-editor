from aiogram.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton
)
from aiogram.utils.keyboard import InlineKeyboardBuilder

from ...cbdata import (
    BaseCallbackData,
    MediaCallbackData
)
from ...enums import (
    MediaPosition,
    AllowedMethods
)


def panel_keyboard(
        is_album: bool,
        has_text: bool,
        has_media: bool,
        media_position: MediaPosition,
        has_markup: bool,
        has_spoiler: bool,
        disable_web_page_preview: bool,
        disable_notifications: bool,
        back_callback_data: str,
        then_callback_data: str,
        back_title: str,
        then_title: str,
        allowed_methods: list[AllowedMethods] | None
) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text=f"{'–î–æ–¥–∞—Ç–∏' if not has_text else '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏' } —Ç–µ–∫—Å—Ç",
            callback_data=BaseCallbackData(
                action='edit_text'
            ).pack()
        ),
        InlineKeyboardButton(
            text=f"{'–î–æ–¥–∞—Ç–∏' if not has_media else '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏'} –º–µ–¥—ñ–∞",
            callback_data=MediaCallbackData(
                action='edit',
                position=media_position
            ).pack()
        )
    )
    if not is_album:
        builder.row(
            InlineKeyboardButton(
                text=f"{'–î–æ–¥–∞—Ç–∏' if not has_markup else '–†–µ–¥–∞–≥—É–≤–∞—Ç–∏'} URL-–ö–Ω–æ–ø–∫–∏",
                callback_data=BaseCallbackData(
                    action='edit_markup'
                ).pack()
            )
        )
    if allowed_methods is None or AllowedMethods.REPLACE_LINKS in allowed_methods:
        builder.row(
            InlineKeyboardButton(
                text="–ó–∞–º—ñ–Ω–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è",
                callback_data=BaseCallbackData(
                    action="replace_links"
                ).pack()
            )
        )
    row = []
    if allowed_methods is None or AllowedMethods.DISABLE_NOTIFICATIONS_SWITCH:
        row.append(
            InlineKeyboardButton(
                text='üîî' if not disable_notifications else 'üîï',
                callback_data=BaseCallbackData(
                    action='disable_notifications_switch'
                ).pack()
            )
        )
    if allowed_methods is None or AllowedMethods.DISABLE_WEB_PAGE_PREVIEW_SWITCH:
        row.append(
            InlineKeyboardButton(
                text=f"–ü—Ä–µ–≤—å—é {'‚òëÔ∏è' if not disable_web_page_preview else '‚úÖ'}",
                callback_data=BaseCallbackData(
                    action='disable_web_page_preview_switch'
                ).pack()
            )
        )
    builder.row(*row)

    if allowed_methods is None or AllowedMethods.SPOILER_SWITCH in allowed_methods:
        builder.row(
            InlineKeyboardButton(
                text=f"–°–ø–æ–π–ª–µ—Ä {'‚úÖ' if not has_spoiler else '‚òëÔ∏è'}",
                callback_data=BaseCallbackData(
                    action='media_spoiler_switch'
                ).pack()
            )
        )
    builder.row(
        InlineKeyboardButton(
            text=back_title if back_title is not None else "‚Äπ‚Äπ –ù–∞–∑–∞–¥",
            callback_data=back_callback_data
        ),
        InlineKeyboardButton(
            text=then_title if then_title is not None else "–í–ø–µ—Ä–µ–¥ ‚Ä∫‚Ä∫",
            callback_data=then_callback_data
        )
    )
    return InlineKeyboardMarkup(
        inline_keyboard=builder.export()
    )
